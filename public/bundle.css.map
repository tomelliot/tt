{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte"
  ],
  "sourcesContent": [
    "<svelte:head>\n</svelte:head>\n\n<script>\n    import { onMount } from 'svelte';\n    import jQuery from \"jquery\";\n    import { CITIES } from \"./cities.js\";\n\n    import {\n        Dropdown,\n        DropdownItem,\n        DropdownMenu,\n        DropdownToggle\n    } from 'sveltestrap';\n\n    // a bunch of variables that are needed across function scopes:\n    let isDropdownOpen = false;\n    let mounted = false;\n    let groups = [{},{},{},{}];\n    let basetime = 0;\n    let date_picker = 0;\n    let search_box = \"\";\n\n    groups[0] = {\"name\": \"Visible_Cities_List\", \"city_names\": []};\n    groups[1] = {\"name\": \"Cities_Showing_Timezones_List\", \"city_names\": []};\n    groups[2] = {\"name\": \"All_Cities_List\", \"city_names\": CITIES.city_names, \"city_timezones\": CITIES.city_timezones};\n    groups[3] = {\"name\": \"Cities_Shown_in_Dropdown_List\", \"city_names\": []};\n\n    onMount(() => {\n        // The page is ready.\n        console.log('onMount');\n        mounted = true;\n        allJsLoaded();\n    });\n\n    function allJsLoaded() {\n        console.log('allJsLoaded');\n\n        // Capture the event when user types into the search_box box\n        search_box = document.getElementById(\"city_search_box_box\");\n        window.addEventListener('input', function () {\n            filterCityDropdown(search_box.value.trim().toLowerCase());\n        })\n\n        date_picker = new Pikaday({ field: document.getElementById('datepicker'),\n            format: 'D MMM YYYY',\n            defaultDate: moment().toDate(),\n            setDefaultDate: true,\n            onSelect: function() {\n                updateTzs(this.getMoment());}});\n\n        setDefaultViewData();\n        setSearchBoxData();\n        loadMomentElements();\n        setTimeout(initialiseTable,100);   // for some reason, if we don't wait before calling this then the window size may get reported as `xs` instead of whatever size it actually is.\n    };\n\n    function datepickerArrowClicked(direction) {\n        let new_basetime = 0;\n        let nbdays = -1;\n        console.log(\"datepickerArrowClicked\");\n        if (direction == \"right\") {\n            nbdays = 1;\n        }\n        new_basetime = basetime.add(nbdays, \"days\");\n        console.log(new_basetime.format())\n        date_picker.setMoment(new_basetime);\n        updateTzs(new_basetime);\n    }\n\n    function initialiseTable() {\n        console.log(\"initialiseTable\");\n        getViewportSize();\n        updateTzs();\n        setTimeout(defaultHighlighting,100);  // for some reason this doesn't happen unless we give it a timeout.\n    }\n\n    function loadMomentElements() {\n        console.log('loadMomentElements');\n        basetime = moment()\n        console.log(basetime.format())\n    };\n\n    let tz_clocks = [0];\n    let nb_clocks = 0;\n    let datepicker_divs_count = 0;\n    let datepicker_divs_width = 0;\n\n    function getTimezoneName(city_name) {\n        var index_in_all_city_list =  groups[2].city_names.indexOf(city_name);\n        return groups[2].city_timezones[index_in_all_city_list];\n    }\n\n    function getClockArray(clock_basetime) {\n        let clock_array = [];\n        clock_basetime.add(-Math.floor(nb_clocks/2)-1, \"hours\");\n        for (var i = nb_clocks - 1; i >= 0; i--) {\n            clock_array = clock_array.concat(clock_basetime.add(1, \"hours\").hours());\n        }\n        return clock_array;\n    };\n\n    function updateBasetime(clock, tz_row) {\n        var new_basetime = basetime.add(tz_clocks[0][clock]-basetime.hours(),\"hours\");\n        updateTzs(new_basetime);\n    };\n\n    function clearHighlighting() {\n      let class_name = \".timezone_clock\";\n      jQuery(class_name).css(\"font-weight\", 'normal');\n      jQuery(class_name).css(\"background\", \"none\");\n    }\n\n    function defaultHighlighting() {\n      clearHighlighting();\n      let middle_col = (datepicker_divs_count+1).toString()\n      let class_name = \".col_\"+middle_col;\n      jQuery(class_name).css(\"font-weight\", 'bold');\n      jQuery(class_name).css(\"background\", \"#eee\");\n    }\n\n\n    function hoverCol(col_nb) {\n      clearHighlighting();\n      let class_name = \".col_\"+col_nb;\n      jQuery(class_name).css(\"font-weight\", 'bold');\n      jQuery(class_name).css(\"background\", \"#eee\");\n    };\n\n    function unHoverCol(col_nb) {\n      let class_name = \".col_\"+col_nb;\n      jQuery(class_name).css(\"font-weight\", 'normal');\n      jQuery(class_name).css(\"background\", \"none\");\n      defaultHighlighting();\n    };\n\n    function updateTzs(new_basetime) {\n        console.log(\"updateTzs\");\n\n        if(typeof new_basetime === \"undefined\") {\n            basetime = moment();\n        } else {\n            basetime = new_basetime\n        }\n        let tzs = [];\n        tz_clocks = [];\n        let reference_tz = 0;\n\n        for (var i = 0; i <= groups[1].city_names.length - 1; i++) {\n            if (i == 0) {\n                // first element is the \"reference timezone\"\n                reference_tz = basetime.tz(getTimezoneName(groups[1].city_names[i])).utcOffset();\n            }\n            var local_time = moment(basetime.format()).tz(getTimezoneName(groups[1].city_names[i]));\n            var local_offset = local_time.utcOffset();\n            var local_time_str = local_time.format();\n            var offset_difference = (reference_tz - local_offset)/60\n            if (offset_difference < 0) {\n                var offset_difference_str = offset_difference.toString();\n            } else {\n                var offset_difference_str = \"+\" + offset_difference.toString();\n            }\n            tzs = tzs.concat(offset_difference_str + \": \" + local_time_str);\n            tz_clocks = tz_clocks.concat([getClockArray(local_time)]);\n        }\n    }\n\n    function dragstart (ev, group, item) {\n        ev.dataTransfer.setData(\"group\", group);\n        ev.dataTransfer.setData(\"item\", item);\n    }\n\n    function dragover (ev) {\n        ev.preventDefault();\n        ev.dataTransfer.dropEffect = 'move';\n    }\n\n    function drop (ev, new_g) {\n        ev.preventDefault();\n        var i = ev.dataTransfer.getData(\"item\");\n        var old_g = ev.dataTransfer.getData(\"group\");\n        const city_name = groups[old_g].city_names.splice(i,1)[0];\n        groups[new_g].city_names = groups[new_g].city_names.concat(city_name);\n        groups[new_g].city_names.sort();\n        updateTzs(basetime);\n    }\n\n    function handleClick (ev, new_g) {\n        ev.preventDefault();\n        console.log(\"handleClick\")\n        var i = ev.target.attributes.city_name_row.value;\n        var old_g = ev.target.attributes.group.value;\n        const city_name = groups[old_g].city_names.splice(i,1)[0];\n        groups[new_g].city_names.push(city_name);\n        groups[new_g].city_names.sort();\n        search_box.value=\"\";\n        setSearchBoxData();\n        updateTzs(basetime);\n        setTimeout(defaultHighlighting,50);\n    }\n\n    function setDefaultViewData() {\n        let cities_to_show = ['Buenos Aires', 'Riga', 'Sydney', 'Vancouver'];\n        for (var i = 0; i <= cities_to_show.length - 1; i++) {\n            groups[0].city_names = groups[0].city_names.concat(cities_to_show[i]);\n        }\n        groups[1].city_names = [\"Berlin\"];\n    }\n\n    function setSearchBoxData() {\n        console.log(\"setSearchBoxData\");\n        var city_names = [];\n        for (var i = 0; i <= groups[2].city_names.length - 1; i++) {\n            if (!cityIsAlreadyOnPage(groups[2].city_names[i])) {\n                // this is not already shown in the timezone list, so it can be added to the search_box list\n                city_names = city_names.concat(groups[2].city_names[i]);\n            }\n        }\n        groups[3].city_names = city_names;\n    }\n\n    function getViewportSize() {\n        let viewportSize = jQuery(\"#sizer\").find(\"div:visible\").data(\"size\");\n        if ((viewportSize == \"sm\") || viewportSize == \"xs\") {\n            nb_clocks = 5;\n            datepicker_divs_count = 1;\n            datepicker_divs_width = \"16%\";\n        } else {\n            nb_clocks = 9;\n            datepicker_divs_count = 3;\n            datepicker_divs_width = \"10%\";\n        }\n        return viewportSize;\n    }\n\n    function windowResize() {\n        getViewportSize();\n        console.log(getViewportSize());\n        updateTzs();\n        defaultHighlighting();\n    }\n    jQuery(window).on('resize', windowResize);\n\n\n    //// Dropdown menu search_box thing\n    //Find every item inside the dropdown\n    let items = document.getElementsByClassName(\"dropdown-item\")\n\n    function cityIsAlreadyOnPage(city_name) {\n        if ((groups[1].city_names.includes(city_name)) || (groups[0].city_names.includes(city_name))) {\n            return true;\n        }\n        return false;\n    }\n\n    //For every word entered by the user, check if the symbol starts with that word\n    //If it does show the symbol, else hide it\n    function filterCityDropdown(word) {\n        let collection = []\n        let hidden = 0\n        var city_names = [];\n\n        for (let i = 0; i < groups[2].city_names.length; i++) {\n            if (groups[2].city_names[i].toLowerCase().startsWith(word)) {\n                if (!cityIsAlreadyOnPage(groups[2].city_names[i])) {\n                    city_names = city_names.concat(groups[2].city_names[i]);\n                }\n            }\n        }\n        groups[3].city_names = city_names;\n    }\n\n    //If the user clicks on any item, hide the menu\n    jQuery('#menuItems').on('click', '.dropdown-item', function(){\n        jQuery(\"#dropdown_coins\").dropdown('toggle');\n    })\n\n\n</script>\n\n<style>\n    .timezone_clock {\n        align-items: center;\n        border: none;\n        text-align: center;\n        vertical-align: middle;\n    }\n    .timezone_clock:hover {\n        cursor: pointer;\n    }\n    .city_name_active {\n        border-right-color: rgb(190,190,190);\n        border-right-style: solid;\n        border-right-width: 2px;\n    }\n    .city_name_inactive {\n    border-right-color: rgb(190,190,190);\n    border-right-style: solid;\n    border-right-width: 2px;\n\n      color: rgb(190,190,190);\n      font-weight: lighter;\n      background: inherit;\n    }\n    .inactive_row {\n    }\n    .city_name_inactive:hover {\n        cursor: pointer;\n    }\n    .city_name_active:hover {\n        cursor: pointer;\n    }\n    .city_table {\n        background-color: inherit;\n        border-width: 1px;\n        /*border-style: solid;*/\n        border-style: none;\n        margin-bottom: 0;\n        height:95vh;\n    }\n    .clock_cell {\n        border-left-width: 1px;\n        border-right-width: 1px;\n        /*border-style: solid;*/\n    }\n    .city_search_row {\n    }\n    ::placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */\n        opacity: 1; /* Firefox */\n    }\n    .search_box {\n        background-color: inherit;\n        border-width: 1px;\n        box-shadow:none;\n        padding: 0;\n        margin: 0;\n        border: none;\n    }\n    .highlight_clock {\n        font-weight: bold;\n        border-left-width: 2px;\n        border-right-width: 3px;\n    }\n    .datepicker_box {\n        vertical-align: middle;\n        text-align: center;\n        margin: 0px;\n    }\n    .datepicker_input {\n        text-align: center;\n        /*border: none;*/\n        background-color: inherit;\n    }\n    .datepicker_input:hover {\n        cursor: pointer;\n    }\n    .datepicker_arrows {\n        vertical-align: middle;\n    }\n    .datepicker_arrows:hover {\n        cursor: pointer;\n    }\n    .datepicker_arrows_left {\n        text-align: right\n    }\n    .datepicker_arrows_right {\n        text-align: left\n    }\n    .city_row {\n        height:5vh;\n    }\n    .date_row {\n        height:5vh;\n    }\n    .col {\n      font-weight: lighter;\n    }\n\n</style>\n\n\n<div class=\"container\">\n    <table class=\"table city_table\" style:line-height:10vh>\n        <tbody>\n            <tr class=\"date_row\">\n                <td></td>\n                <td class=\"datepicker_arrows datepicker_arrows_left\" colspan={datepicker_divs_count} on:click={() => datepickerArrowClicked(\"left\")}>◄</td>\n                <td class=\"datepicker_box\" colspan=3><input class=\"datepicker_input\" type=\"text\" id=\"datepicker\"></td>\n                <td class=\"datepicker_arrows datepicker_arrows_right\" colspan={datepicker_divs_count} on:click={() => datepickerArrowClicked(\"right\")}>►</td>\n            </tr>\n            {#each groups[1].city_names as city_name,i}\n                <tr class=\"city_row\" on:drop={event => drop(event, 1)} on:dragover={dragover}>\n                    <td class=\"city_name_active\" city_name_row={i} group=1 draggable={true} on:dragstart={event => dragstart(event, 1, i)}  on:click={event => handleClick(event, 0)}>\n                        { city_name }\n                    </td>\n                    {#each tz_clocks[i] as cl,j}\n                        <td class=\"timezone_clock col_{j} clock_cell\" style=\"width: {datepicker_divs_width}\" on:mouseenter={event => hoverCol(j)} on:mouseleave={event => unHoverCol(j)} on:click={event => updateBasetime(j, i)}>\n                            {cl}:00\n                        </td>\n                    {/each}\n                </tr>\n            {/each}\n            {#each groups[0].city_names as city_name,i}\n            <tr class=\"city_row\" on:drop={event => drop(event, 1)} on:dragover={dragover}>\n            <td class=\"city_name_inactive\" city_name_row={i} group=0 draggable={true} on:dragstart={event => dragstart(event, 0, i)} on:drop={event => drop(event, 0)} on:click={event => handleClick(event, 1)} on:dragover={dragover}>\n                {city_name}\n            </td>\n            <td class=\"inactive_row\" colspan={datepicker_divs_count}></td>\n            <td class=\"inactive_row\" colspan=3></td>\n            <td class=\"inactive_row\" colspan={datepicker_divs_count}></td>\n            </tr>\n            {/each}\n<tr></tr>\n            <tr class=\"city_row city_search_row\">\n                <td>\n                    <Dropdown isOpen={isDropdownOpen} toggle={() => (isDropdownOpen = !isDropdownOpen)}>\n                        <input type=\"search_box\" class=\"form-control search_box\" id=\"city_search_box_box\" placeholder=\"Search City\" on:click={() => (isDropdownOpen = !isDropdownOpen)}>\n                        <DropdownMenu style=\"max-height: 40vh; overflow:scroll;\">\n                            {#each groups[3].city_names as menu_item,i}\n                                <DropdownItem city_name_row={i} group=3 on:click={event => handleClick(event, 1)}>{menu_item}</DropdownItem>\n                            {/each}\n                        </DropdownMenu>\n                    </Dropdown>\n                </td>\n                {#each tz_clocks[0] as clock,i}\n                    <td></td>\n                {/each}\n            </tr>\n            <tr></tr>\n        </tbody>\n    </table>\n</div>\n\n<div id=\"sizer\">\n    <div class=\"d-block d-sm-none d-md-none d-lg-none d-xl-none\" data-size=\"xs\"></div>\n    <div class=\"d-none d-sm-block d-md-none d-lg-none d-xl-none\" data-size=\"sm\"></div>\n    <div class=\"d-none d-sm-none d-md-block d-lg-none d-xl-none\" data-size=\"md\"></div>\n    <div class=\"d-none d-sm-none d-md-none d-lg-block d-xl-none\" data-size=\"lg\"></div>\n    <div class=\"d-none d-sm-none d-md-none d-lg-none d-xl-block\" data-size=\"xl\"></div>\n</div>\n"
  ],
  "names": [],
  "mappings": "AAyRI,eAAe,cAAC,CAAC,AACb,WAAW,CAAE,MAAM,CACnB,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,MAAM,CAClB,cAAc,CAAE,MAAM,AAC1B,CAAC,AACD,6BAAe,MAAM,AAAC,CAAC,AACnB,MAAM,CAAE,OAAO,AACnB,CAAC,AACD,iBAAiB,cAAC,CAAC,AACf,kBAAkB,CAAE,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CACpC,kBAAkB,CAAE,KAAK,CACzB,kBAAkB,CAAE,GAAG,AAC3B,CAAC,AACD,mBAAmB,cAAC,CAAC,AACrB,kBAAkB,CAAE,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CACpC,kBAAkB,CAAE,KAAK,CACzB,kBAAkB,CAAE,GAAG,CAErB,KAAK,CAAE,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CACvB,WAAW,CAAE,OAAO,CACpB,UAAU,CAAE,OAAO,AACrB,CAAC,AACD,aAAa,cAAC,CAAC,AACf,CAAC,AACD,iCAAmB,MAAM,AAAC,CAAC,AACvB,MAAM,CAAE,OAAO,AACnB,CAAC,AACD,+BAAiB,MAAM,AAAC,CAAC,AACrB,MAAM,CAAE,OAAO,AACnB,CAAC,AACD,WAAW,cAAC,CAAC,AACT,gBAAgB,CAAE,OAAO,CACzB,YAAY,CAAE,GAAG,CAEjB,YAAY,CAAE,IAAI,CAClB,aAAa,CAAE,CAAC,CAChB,OAAO,IAAI,AACf,CAAC,AACD,WAAW,cAAC,CAAC,AACT,iBAAiB,CAAE,GAAG,CACtB,kBAAkB,CAAE,GAAG,AAE3B,CAAC,AACD,gBAAgB,cAAC,CAAC,AAClB,CAAC,cACD,aAAa,AAAC,CAAC,AACX,OAAO,CAAE,CAAC,AACd,CAAC,AACD,WAAW,cAAC,CAAC,AACT,gBAAgB,CAAE,OAAO,CACzB,YAAY,CAAE,GAAG,CACjB,WAAW,IAAI,CACf,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,CAAC,CACT,MAAM,CAAE,IAAI,AAChB,CAAC,AACD,gBAAgB,cAAC,CAAC,AACd,WAAW,CAAE,IAAI,CACjB,iBAAiB,CAAE,GAAG,CACtB,kBAAkB,CAAE,GAAG,AAC3B,CAAC,AACD,eAAe,cAAC,CAAC,AACb,cAAc,CAAE,MAAM,CACtB,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,GAAG,AACf,CAAC,AACD,iBAAiB,cAAC,CAAC,AACf,UAAU,CAAE,MAAM,CAElB,gBAAgB,CAAE,OAAO,AAC7B,CAAC,AACD,+BAAiB,MAAM,AAAC,CAAC,AACrB,MAAM,CAAE,OAAO,AACnB,CAAC,AACD,kBAAkB,cAAC,CAAC,AAChB,cAAc,CAAE,MAAM,AAC1B,CAAC,AACD,gCAAkB,MAAM,AAAC,CAAC,AACtB,MAAM,CAAE,OAAO,AACnB,CAAC,AACD,uBAAuB,cAAC,CAAC,AACrB,UAAU,CAAE,KAAK;IACrB,CAAC,AACD,wBAAwB,cAAC,CAAC,AACtB,UAAU,CAAE,IAAI;IACpB,CAAC,AACD,SAAS,cAAC,CAAC,AACP,OAAO,GAAG,AACd,CAAC,AACD,SAAS,cAAC,CAAC,AACP,OAAO,GAAG,AACd,CAAC,AACD,IAAI,cAAC,CAAC,AACJ,WAAW,CAAE,OAAO,AACtB,CAAC"
}